declare type AsyncFn<T> = () => Promise<T> | T;
/**
 * Wrap a function in a safe wrapper that never throws
 * Returns a discriminated union
 */
export declare function wrapCallSafe<T>(fn: AsyncFn<T>): Promise<{
    ok: true;
    data: T;
    error?: undefined;
} | {
    ok: false;
    error: unknown;
    data?: undefined;
}>;
export {};
//# sourceMappingURL=wrapCallSafe.d.ts.map